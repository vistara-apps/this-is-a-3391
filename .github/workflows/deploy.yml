name: Deploy to Vercel

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install

    - name: Build application
      run: npm run build
      env:
        NODE_OPTIONS: --max-old-space-size=4096
        
    - name: Deploy to Vercel (Production)
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--prod'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Deploy to Vercel (Preview)
      if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master'
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-args: '--no-wait'
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Build Success
      if: success()
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      run: |
        echo "‚úÖ Build completed successfully!"
        echo "üì¶ Application is ready for deployment"
        if [ "$VERCEL_TOKEN" = "" ]; then
          echo "‚ÑπÔ∏è  Vercel deployment skipped - VERCEL_TOKEN not configured"
          echo "üîß To enable Vercel deployment, add VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID secrets"
        fi
        
    - name: Comment PR with build status
      if: github.event_name == 'pull_request' && success()
      uses: actions/github-script@v7
      env:
        VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      with:
        script: |
          const hasVercelSecrets = process.env.VERCEL_TOKEN !== '';
          let body = '‚úÖ **Build completed successfully!**\n\n';
          
          if (hasVercelSecrets) {
            // Try to get deployment info if Vercel is configured
            try {
              const { data: deployments } = await github.rest.repos.listDeployments({
                owner: context.repo.owner,
                repo: context.repo.repo,
                per_page: 1
              });
              
              if (deployments.length > 0) {
                const latestDeployment = deployments[0];
                const deploymentUrl = `https://${latestDeployment.environment}.vercel.app`;
                body += `üöÄ **Preview Deployment:** ${deploymentUrl}\n\n`;
              }
            } catch (error) {
              console.log('Could not fetch deployment info:', error.message);
            }
          } else {
            body += 'üì¶ **Application built and ready for deployment**\n\n';
            body += '‚ÑπÔ∏è *Vercel deployment is not configured for this repository*\n';
            body += 'üîß *To enable automatic deployments, add VERCEL_TOKEN, VERCEL_ORG_ID, and VERCEL_PROJECT_ID secrets*\n\n';
          }
          
          body += 'This status will be updated when you push new commits to this PR.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
